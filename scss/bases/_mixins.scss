//responsive
@mixin breakpoint($point){
  @if $point == xs{
    @media (max-width: $screen-xs){ @content ;}
  } @else if $point == sm {
    @media (min-width: $screen-sm){ @content ;}
  } @else if $point == md {
    @media (min-width: $screen-md){ @content ;}
  } @else if $point == lg {
    @media (min-width: $screen-lg){ @content ;}
  } @else if $point == max-sm {
    @media (max-width: ($screen-md - 1)){ @content ;}
  } @else if $point == max-md {
    @media (max-width: ($screen-lg - 1)){ @content ;}
  } @else if $point == only-sm {
    @media (min-width: $screen-sm) and (max-width: ($screen-md - 1)){ @content ;}
  } @else if $point == only-md {
    @media (min-width: $screen-md) and (max-width: ($screen-lg - 1)){ @content ;}
  } @else if $point == gf {
    @media (max-width: $screen-gf){ @content ;}
  }
}

//container
@mixin container() {
  margin-right: auto;
  margin-left: auto;
  padding-left: 15px;
  padding-right: 15px;
  @include breakpoint(gf){width:270px;}
  @include breakpoint(sm){width:750px;}
  @include breakpoint(md){width:970px;}
  @include breakpoint(lg){width:1230px;}
}

//row
@mixin row() {
  margin-left: -15px;
  margin-right: -15px;
}

//col
@mixin col() {
  position: relative;
  min-height: 1px;
  padding-left:  ($grid-gutter-width / 2);
  padding-right: ($grid-gutter-width / 2);
}

//responsive utilities
@mixin responsive-visibility($parent) {
  #{$parent} {
    display: block !important;
  }
}

@mixin responsive-invisibility($parent) {
  #{$parent} {
    display: none !important;
  }
}

//border-radius
@mixin border-radius($radius){
  border-radius: $radius;
}

//border
@mixin add-border($size, $color, $position){
  @if $position == 'all'{
    border: $size solid $color;
  } @else if $position == 'top'{
    border-top: $size solid $color;
  } @else if $position == 'bottom'{
    border-bottom: $size solid $color;
  } @else if $position == 'left'{
    border-left: $size solid $color;
  } @else if $position == 'right'{
    border-right: $size solid $color;
  } @else if $position == 'top-bottom'{
    border-top: $size solid $color;
    border-bottom: $size solid $color;
  } @else if $position == 'right-left'{
    border-right: $size solid $color;
    border-left: $size solid $color;
  }
}

//background-color
@mixin add-background($color){
  background-color: $color;
}

//width
@mixin add-width($width){
  width: $width;
}

//height
@mixin add-height($height){
  height: $height;
}

//clearfix
@mixin clearfix() {
  &:before,
  &:after {
    content: " ";
    display: table;
  }
  &:after {
    clear: both;
  }
}

@mixin hidden-1(){
  opacity: 0;
  visibility: hidden;
  transform: scale(.9);
  transition: .3s;
}
@mixin show-1(){
  opacity: 1;
  visibility:visible;
  transform: scale(1);
}
@mixin flex-1(){
  display: flex;
  justify-content: space-between;
}
@mixin flex-2(){
  display: flex;
  justify-content: space-between;
  align-items: center;
}
@mixin popup-header(){
  background-color: $yellow-1;
  display: flex;
  justify-content: space-between;
  align-items: center;
  padding: 10px 15px;
  @include breakpoint(sm){
    display: none;
  }
}
@mixin popup-input(){
  width: calc(100% - 50px);
  padding: 10px;
  border: none;
  background-color:$white-1;
  border-radius: 4px;
  font-size: 14px;
}
